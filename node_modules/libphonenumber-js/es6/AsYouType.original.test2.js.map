{"version":3,"sources":["../source/AsYouType.original.test2.js"],"names":["AsYouType_","metadata","AsYouType","country","describe","it","testInvalidRegion","testInvalidPlusSign","testTooLongNumberMatchingMultipleLeadingDigits","testCountryWithSpaceInNationalPrefixFormattingRule","testCountryWithSpaceInNationalPrefixFormattingRuleAndLongNdd","testAYTFUS","testAYTFUSFullWidthCharacters","testAYTFUSMobileShortCode","testAYTFUSVanityNumber","testAYTFAndRememberPositionUS","testAYTFGBFixedLine","testAYTFGBTollFree","testAYTFGBPremiumRate","testAYTFNZMobile","testAYTFDE","testAYTFAR","testAYTFARMobile","testAYTFKR","testAYTF_MX","testAYTF_International_Toll_Free","testAYTFMultipleLeadingDigitPatterns","testAYTFLongIDD_AU","testAYTFLongIDD_KR","testAYTFLongNDD_KR","testAYTFLongNDD_SG","testAYTFShortNumberFormattingFix_AU","testAYTFShortNumberFormattingFix_KR","testAYTFShortNumberFormattingFix_MX","testAYTFNoNationalPrefix","testAYTFNoNationalPrefixFormattingRule","testAYTFShortNumberFormattingFix_US","testAYTFClearNDDAfterIddExtraction","testAYTFNumberPatternsBecomingInvalidShouldNotResultInDigitLoss","assertEquals","a","b","expect","to","equal","f","input","reset","inputDigitAndRememberPosition","getRememberedPosition"],"mappings":"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","sourcesContent":["/**\r\n * Copy-pasted from Google's library.\r\n * https://github.com/google/libphonenumber/blob/master/javascript/i18n/phonenumbers/asyoutypeformatter_test.js\r\n * On Jan 20, 2020.\r\n */\r\n\r\nimport AsYouType_ from './AsYouType'\r\nimport metadata from '../metadata.min.json'\r\n\r\nfunction AsYouType(country) {\r\n  return new AsYouType_(country, metadata)\r\n}\r\n\r\ndescribe('AsYouType', () => {\r\n  it('should pass Google\\'s tests', () => {\r\n    testInvalidRegion()\r\n    testInvalidPlusSign()\r\n    testTooLongNumberMatchingMultipleLeadingDigits()\r\n    testCountryWithSpaceInNationalPrefixFormattingRule()\r\n    testCountryWithSpaceInNationalPrefixFormattingRuleAndLongNdd()\r\n    testAYTFUS()\r\n    testAYTFUSFullWidthCharacters()\r\n    testAYTFUSMobileShortCode()\r\n    testAYTFUSVanityNumber()\r\n    testAYTFAndRememberPositionUS()\r\n    testAYTFGBFixedLine()\r\n    testAYTFGBTollFree()\r\n    testAYTFGBPremiumRate()\r\n    testAYTFNZMobile()\r\n    testAYTFDE()\r\n    testAYTFAR()\r\n    testAYTFARMobile()\r\n    testAYTFKR()\r\n    testAYTF_MX()\r\n    testAYTF_International_Toll_Free()\r\n    testAYTFMultipleLeadingDigitPatterns()\r\n    testAYTFLongIDD_AU()\r\n    testAYTFLongIDD_KR()\r\n    testAYTFLongNDD_KR()\r\n    testAYTFLongNDD_SG()\r\n    testAYTFShortNumberFormattingFix_AU()\r\n    testAYTFShortNumberFormattingFix_KR()\r\n    testAYTFShortNumberFormattingFix_MX()\r\n    testAYTFNoNationalPrefix()\r\n    testAYTFNoNationalPrefixFormattingRule()\r\n    testAYTFShortNumberFormattingFix_US()\r\n    testAYTFClearNDDAfterIddExtraction()\r\n    testAYTFNumberPatternsBecomingInvalidShouldNotResultInDigitLoss()\r\n  })\r\n})\r\n\r\nfunction assertEquals(a, b) {\r\n  expect(a).to.equal(b)\r\n}\r\n\r\nfunction testInvalidRegion() {\r\n  var f = AsYouType('ZZ')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+4', f.input('4'))\r\n  assertEquals('+48', f.input('8'))\r\n  assertEquals('+48 8', f.input('8'))\r\n  assertEquals('+48 88', f.input('8'))\r\n  assertEquals('+48 88 1', f.input('1'))\r\n  assertEquals('+48 88 12', f.input('2'))\r\n  assertEquals('+48 88 123', f.input('3'))\r\n  assertEquals('+48 88 123 1', f.input('1'))\r\n  assertEquals('+48 88 123 12', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('6', f.input('6'))\r\n  assertEquals('65', f.input('5'))\r\n  assertEquals('650', f.input('0'))\r\n  assertEquals('6502', f.input('2'))\r\n  assertEquals('65025', f.input('5'))\r\n  assertEquals('650253', f.input('3'))\r\n}\r\n\r\nfunction testInvalidPlusSign() {\r\n  var f = AsYouType('ZZ')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+4', f.input('4'))\r\n  assertEquals('+48', f.input('8'))\r\n  assertEquals('+48 8', f.input('8'))\r\n  assertEquals('+48 88', f.input('8'))\r\n  assertEquals('+48 88 1', f.input('1'))\r\n  assertEquals('+48 88 12', f.input('2'))\r\n  assertEquals('+48 88 123', f.input('3'))\r\n  assertEquals('+48 88 123 1', f.input('1'))\r\n  // A plus sign can only appear at the beginning of the number\r\n  // otherwise, no formatting is applied.\r\n  assertEquals('+48881231+', f.input('+'))\r\n  assertEquals('+48881231+2', f.input('2'))\r\n}\r\n\r\nfunction testTooLongNumberMatchingMultipleLeadingDigits() {\r\n  // See https://github.com/google/libphonenumber/issues/36\r\n  // The bug occurred last time for countries which have two formatting rules\r\n  // with exactly the same leading digits pattern but differ in length.\r\n  var f = AsYouType('ZZ')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+81', f.input('1'))\r\n  assertEquals('+81 9', f.input('9'))\r\n  assertEquals('+81 90', f.input('0'))\r\n  assertEquals('+81 90 1', f.input('1'))\r\n  assertEquals('+81 90 12', f.input('2'))\r\n  assertEquals('+81 90 123', f.input('3'))\r\n  assertEquals('+81 90 1234', f.input('4'))\r\n  assertEquals('+81 90 1234 5', f.input('5'))\r\n  assertEquals('+81 90 1234 56', f.input('6'))\r\n  assertEquals('+81 90 1234 567', f.input('7'))\r\n  assertEquals('+81 90 1234 5678', f.input('8'))\r\n  assertEquals('+81 90 12 345 6789', f.input('9'))\r\n  assertEquals('+81901234567890', f.input('0'))\r\n  assertEquals('+819012345678901', f.input('1'))\r\n}\r\n\r\nfunction testCountryWithSpaceInNationalPrefixFormattingRule() {\r\n  var f = AsYouType('BY')\r\n  assertEquals('8', f.input('8'))\r\n  assertEquals('88', f.input('8'))\r\n  assertEquals('881', f.input('1'))\r\n  assertEquals('8 819', f.input('9'))\r\n  assertEquals('8 8190', f.input('0'))\r\n  // The formatting rule for 5 digit numbers states that no space should be\r\n  // present after the national prefix.\r\n  assertEquals('881 901', f.input('1'))\r\n  assertEquals('8 819 012', f.input('2'))\r\n  // Too long, no formatting rule applies.\r\n  assertEquals('88190123', f.input('3'))\r\n}\r\n\r\nfunction testCountryWithSpaceInNationalPrefixFormattingRuleAndLongNdd() {\r\n  var f = AsYouType('BY')\r\n  assertEquals('9', f.input('9'))\r\n  assertEquals('99', f.input('9'))\r\n  assertEquals('999', f.input('9'))\r\n  assertEquals('9999', f.input('9'))\r\n  assertEquals('99999', f.input('9'))\r\n  assertEquals('99999 1', f.input('1'))\r\n  assertEquals('99999 12', f.input('2'))\r\n  assertEquals('99999 123', f.input('3'))\r\n  assertEquals('99999 1234', f.input('4'))\r\n  assertEquals('99999 12 345', f.input('5'))\r\n}\r\n\r\nfunction testAYTFUS() {\r\n  var f = AsYouType('US')\r\n  assertEquals('6', f.input('6'))\r\n  assertEquals('65', f.input('5'))\r\n  assertEquals('650', f.input('0'))\r\n  assertEquals('650 2', f.input('2'))\r\n  assertEquals('650 25', f.input('5'))\r\n  assertEquals('650 253', f.input('3'))\r\n  // Note this is how a US local number (without area code) should be formatted.\r\n  assertEquals('650 2532', f.input('2'))\r\n  assertEquals('650 253 22', f.input('2'))\r\n  assertEquals('650 253 222', f.input('2'))\r\n  assertEquals('650 253 2222', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('16', f.input('6'))\r\n  assertEquals('1 65', f.input('5'))\r\n  assertEquals('1 650', f.input('0'))\r\n  assertEquals('1 650 2', f.input('2'))\r\n  assertEquals('1 650 25', f.input('5'))\r\n  assertEquals('1 650 253', f.input('3'))\r\n  assertEquals('1 650 253 2', f.input('2'))\r\n  assertEquals('1 650 253 22', f.input('2'))\r\n  assertEquals('1 650 253 222', f.input('2'))\r\n  assertEquals('1 650 253 2222', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 4', f.input('4'))\r\n  assertEquals('011 44', f.input('4'))\r\n  assertEquals('011 44 6', f.input('6'))\r\n  assertEquals('011 44 61', f.input('1'))\r\n  assertEquals('011 44 6 12', f.input('2'))\r\n  assertEquals('011 44 6 123', f.input('3'))\r\n  assertEquals('011 44 6 123 1', f.input('1'))\r\n  assertEquals('011 44 6 123 12', f.input('2'))\r\n  assertEquals('011 44 6 123 123', f.input('3'))\r\n  assertEquals('011 44 6 123 123 1', f.input('1'))\r\n  assertEquals('011 44 6 123 123 12', f.input('2'))\r\n  assertEquals('011 44 6 123 123 123', f.input('3'))\r\n\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 5', f.input('5'))\r\n  assertEquals('011 54', f.input('4'))\r\n  assertEquals('011 54 9', f.input('9'))\r\n  assertEquals('011 54 91', f.input('1'))\r\n  assertEquals('011 54 9 11', f.input('1'))\r\n  assertEquals('011 54 9 11 2', f.input('2'))\r\n  assertEquals('011 54 9 11 23', f.input('3'))\r\n  assertEquals('011 54 9 11 231', f.input('1'))\r\n  assertEquals('011 54 9 11 2312', f.input('2'))\r\n  assertEquals('011 54 9 11 2312 1', f.input('1'))\r\n  assertEquals('011 54 9 11 2312 12', f.input('2'))\r\n  assertEquals('011 54 9 11 2312 123', f.input('3'))\r\n  assertEquals('011 54 9 11 2312 1234', f.input('4'))\r\n\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 2', f.input('2'))\r\n  assertEquals('011 24', f.input('4'))\r\n  assertEquals('011 244', f.input('4'))\r\n  assertEquals('011 244 2', f.input('2'))\r\n  assertEquals('011 244 28', f.input('8'))\r\n  assertEquals('011 244 280', f.input('0'))\r\n  assertEquals('011 244 280 0', f.input('0'))\r\n  assertEquals('011 244 280 00', f.input('0'))\r\n  assertEquals('011 244 280 000', f.input('0'))\r\n  assertEquals('011 244 280 000 0', f.input('0'))\r\n  assertEquals('011 244 280 000 00', f.input('0'))\r\n  assertEquals('011 244 280 000 000', f.input('0'))\r\n\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+4', f.input('4'))\r\n  assertEquals('+48', f.input('8'))\r\n  assertEquals('+48 8', f.input('8'))\r\n  assertEquals('+48 88', f.input('8'))\r\n  assertEquals('+48 88 1', f.input('1'))\r\n  assertEquals('+48 88 12', f.input('2'))\r\n  assertEquals('+48 88 123', f.input('3'))\r\n  assertEquals('+48 88 123 1', f.input('1'))\r\n  assertEquals('+48 88 123 12', f.input('2'))\r\n  assertEquals('+48 88 123 12 1', f.input('1'))\r\n  assertEquals('+48 88 123 12 12', f.input('2'))\r\n}\r\n\r\nfunction testAYTFUSFullWidthCharacters() {\r\n  var f = AsYouType('US')\r\n  assertEquals('\\uFF16', f.input('\\uFF16'))\r\n  assertEquals('\\uFF16\\uFF15', f.input('\\uFF15'))\r\n  assertEquals('650', f.input('\\uFF10'))\r\n  assertEquals('650 2', f.input('\\uFF12'))\r\n  assertEquals('650 25', f.input('\\uFF15'))\r\n  assertEquals('650 253', f.input('\\uFF13'))\r\n  assertEquals('650 2532', f.input('\\uFF12'))\r\n  assertEquals('650 253 22', f.input('\\uFF12'))\r\n  assertEquals('650 253 222', f.input('\\uFF12'))\r\n  assertEquals('650 253 2222', f.input('\\uFF12'))\r\n}\r\n\r\nfunction testAYTFUSMobileShortCode() {\r\n  var f = AsYouType('US')\r\n  assertEquals('*', f.input('*'))\r\n  assertEquals('*1', f.input('1'))\r\n  assertEquals('*12', f.input('2'))\r\n  assertEquals('*121', f.input('1'))\r\n  assertEquals('*121#', f.input('#'))\r\n}\r\n\r\nfunction testAYTFUSVanityNumber() {\r\n  var f = AsYouType('US')\r\n  assertEquals('8', f.input('8'))\r\n  assertEquals('80', f.input('0'))\r\n  assertEquals('800', f.input('0'))\r\n  assertEquals('800', f.input(' '))\r\n  assertEquals('800 M', f.input('M'))\r\n  assertEquals('800 MY', f.input('Y'))\r\n  assertEquals('800 MY', f.input(' '))\r\n  assertEquals('800 MY A', f.input('A'))\r\n  assertEquals('800 MY AP', f.input('P'))\r\n  assertEquals('800 MY APP', f.input('P'))\r\n  assertEquals('800 MY APPL', f.input('L'))\r\n  assertEquals('800 MY APPLE', f.input('E'))\r\n}\r\n\r\nfunction testAYTFAndRememberPositionUS() {\r\n  var f = AsYouType('US')\r\n  assertEquals('1', f.inputDigitAndRememberPosition('1'))\r\n  assertEquals(1, f.getRememberedPosition())\r\n  assertEquals('16', f.input('6'))\r\n  assertEquals('1 65', f.input('5'))\r\n  assertEquals(1, f.getRememberedPosition())\r\n  assertEquals('1 650', f.inputDigitAndRememberPosition('0'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('1 650 2', f.input('2'))\r\n  assertEquals('1 650 25', f.input('5'))\r\n  // Note the remembered position for digit '0' changes from 4 to 5, because a\r\n  // space is now inserted in the front.\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('1 650 253', f.input('3'))\r\n  assertEquals('1 650 253 2', f.input('2'))\r\n  assertEquals('1 650 253 22', f.input('2'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('1 650 253 222', f.inputDigitAndRememberPosition('2'))\r\n  assertEquals(13, f.getRememberedPosition())\r\n  assertEquals('1 650 253 2222', f.input('2'))\r\n  assertEquals(13, f.getRememberedPosition())\r\n  assertEquals('165025322222', f.input('2'))\r\n  assertEquals(10, f.getRememberedPosition())\r\n  assertEquals('1650253222222', f.input('2'))\r\n  assertEquals(10, f.getRememberedPosition())\r\n\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('16', f.inputDigitAndRememberPosition('6'))\r\n  assertEquals(2, f.getRememberedPosition())\r\n  assertEquals('1 65', f.input('5'))\r\n  assertEquals('1 650', f.input('0'))\r\n  assertEquals(3, f.getRememberedPosition())\r\n  assertEquals('1 650 2', f.input('2'))\r\n  assertEquals('1 650 25', f.input('5'))\r\n  assertEquals(3, f.getRememberedPosition())\r\n  assertEquals('1 650 253', f.input('3'))\r\n  assertEquals('1 650 253 2', f.input('2'))\r\n  assertEquals('1 650 253 22', f.input('2'))\r\n  assertEquals(3, f.getRememberedPosition())\r\n  assertEquals('1 650 253 222', f.input('2'))\r\n  assertEquals('1 650 253 2222', f.input('2'))\r\n  assertEquals('165025322222', f.input('2'))\r\n  assertEquals(2, f.getRememberedPosition())\r\n  assertEquals('1650253222222', f.input('2'))\r\n  assertEquals(2, f.getRememberedPosition())\r\n\r\n  f.reset()\r\n  assertEquals('6', f.input('6'))\r\n  assertEquals('65', f.input('5'))\r\n  assertEquals('650', f.input('0'))\r\n  assertEquals('650 2', f.input('2'))\r\n  assertEquals('650 25', f.input('5'))\r\n  assertEquals('650 253', f.input('3'))\r\n  assertEquals('650 2532', f.inputDigitAndRememberPosition('2'))\r\n  assertEquals(8, f.getRememberedPosition())\r\n  assertEquals('650 253 22', f.input('2'))\r\n  assertEquals(9, f.getRememberedPosition())\r\n  assertEquals('650 253 222', f.input('2'))\r\n  // No more formatting when semicolon is entered.\r\n  assertEquals('650253222;', f.input(';'))\r\n  assertEquals(7, f.getRememberedPosition())\r\n  assertEquals('650253222;2', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('6', f.input('6'))\r\n  assertEquals('65', f.input('5'))\r\n  assertEquals('650', f.input('0'))\r\n  // No more formatting when users choose to do their own formatting.\r\n  assertEquals('650-', f.input('-'))\r\n  assertEquals('650-2', f.inputDigitAndRememberPosition('2'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('650-25', f.input('5'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('650-253', f.input('3'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('650-253-', f.input('-'))\r\n  assertEquals('650-253-2', f.input('2'))\r\n  assertEquals('650-253-22', f.input('2'))\r\n  assertEquals('650-253-222', f.input('2'))\r\n  assertEquals('650-253-2222', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 4', f.inputDigitAndRememberPosition('4'))\r\n  assertEquals('011 48', f.input('8'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('011 48 8', f.input('8'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('011 48 88', f.input('8'))\r\n  assertEquals('011 48 88 1', f.input('1'))\r\n  assertEquals('011 48 88 12', f.input('2'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('011 48 88 123', f.input('3'))\r\n  assertEquals('011 48 88 123 1', f.input('1'))\r\n  assertEquals('011 48 88 123 12', f.input('2'))\r\n  assertEquals('011 48 88 123 12 1', f.input('1'))\r\n  assertEquals('011 48 88 123 12 12', f.input('2'))\r\n\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+1', f.input('1'))\r\n  assertEquals('+1 6', f.inputDigitAndRememberPosition('6'))\r\n  assertEquals('+1 65', f.input('5'))\r\n  assertEquals('+1 650', f.input('0'))\r\n  assertEquals(4, f.getRememberedPosition())\r\n  assertEquals('+1 650 2', f.input('2'))\r\n  assertEquals(4, f.getRememberedPosition())\r\n  assertEquals('+1 650 25', f.input('5'))\r\n  assertEquals('+1 650 253', f.inputDigitAndRememberPosition('3'))\r\n  assertEquals('+1 650 253 2', f.input('2'))\r\n  assertEquals('+1 650 253 22', f.input('2'))\r\n  assertEquals('+1 650 253 222', f.input('2'))\r\n  assertEquals(10, f.getRememberedPosition())\r\n\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+1', f.input('1'))\r\n  assertEquals('+1 6', f.inputDigitAndRememberPosition('6'))\r\n  assertEquals('+1 65', f.input('5'))\r\n  assertEquals('+1 650', f.input('0'))\r\n  assertEquals(4, f.getRememberedPosition())\r\n  assertEquals('+1 650 2', f.input('2'))\r\n  assertEquals(4, f.getRememberedPosition())\r\n  assertEquals('+1 650 25', f.input('5'))\r\n  assertEquals('+1 650 253', f.input('3'))\r\n  assertEquals('+1 650 253 2', f.input('2'))\r\n  assertEquals('+1 650 253 22', f.input('2'))\r\n  assertEquals('+1 650 253 222', f.input('2'))\r\n  assertEquals('+1650253222;', f.input(';'))\r\n  assertEquals(3, f.getRememberedPosition())\r\n}\r\n\r\nfunction testAYTFGBFixedLine() {\r\n  var f = AsYouType('GB')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('02', f.input('2'))\r\n  assertEquals('020', f.input('0'))\r\n  assertEquals('020 7', f.inputDigitAndRememberPosition('7'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('020 70', f.input('0'))\r\n  assertEquals('020 703', f.input('3'))\r\n  assertEquals(5, f.getRememberedPosition())\r\n  assertEquals('020 7031', f.input('1'))\r\n  assertEquals('020 7031 3', f.input('3'))\r\n  assertEquals('020 7031 30', f.input('0'))\r\n  assertEquals('020 7031 300', f.input('0'))\r\n  assertEquals('020 7031 3000', f.input('0'))\r\n}\r\n\r\nfunction testAYTFGBTollFree() {\r\n  var f = AsYouType('GB')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('08', f.input('8'))\r\n  assertEquals('080', f.input('0'))\r\n  assertEquals('080 7', f.input('7'))\r\n  assertEquals('080 70', f.input('0'))\r\n  assertEquals('080 703', f.input('3'))\r\n  assertEquals('080 7031', f.input('1'))\r\n  assertEquals('080 7031 3', f.input('3'))\r\n  assertEquals('080 7031 30', f.input('0'))\r\n  assertEquals('080 7031 300', f.input('0'))\r\n  assertEquals('080 7031 3000', f.input('0'))\r\n}\r\n\r\nfunction testAYTFGBPremiumRate() {\r\n  var f = AsYouType('GB')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('09', f.input('9'))\r\n  assertEquals('090', f.input('0'))\r\n  assertEquals('090 7', f.input('7'))\r\n  assertEquals('090 70', f.input('0'))\r\n  assertEquals('090 703', f.input('3'))\r\n  assertEquals('090 7031', f.input('1'))\r\n  assertEquals('090 7031 3', f.input('3'))\r\n  assertEquals('090 7031 30', f.input('0'))\r\n  assertEquals('090 7031 300', f.input('0'))\r\n  assertEquals('090 7031 3000', f.input('0'))\r\n}\r\n\r\nfunction testAYTFNZMobile() {\r\n  var f = AsYouType('NZ')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('02', f.input('2'))\r\n  assertEquals('021', f.input('1'))\r\n  assertEquals('02-11', f.input('1'))\r\n  assertEquals('02-112', f.input('2'))\r\n  // Note the unittest is using fake metadata which might produce non-ideal\r\n  // results.\r\n  assertEquals('02-112 3', f.input('3'))\r\n  assertEquals('02-112 34', f.input('4'))\r\n  assertEquals('02-112 345', f.input('5'))\r\n  assertEquals('02-112 3456', f.input('6'))\r\n}\r\n\r\nfunction testAYTFDE() {\r\n  var f = AsYouType('DE')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('03', f.input('3'))\r\n  assertEquals('030', f.input('0'))\r\n  assertEquals('030/1', f.input('1'))\r\n  assertEquals('030/12', f.input('2'))\r\n  assertEquals('030/123', f.input('3'))\r\n  assertEquals('030/1234', f.input('4'))\r\n\r\n  // 04134 1234\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('04', f.input('4'))\r\n  assertEquals('041', f.input('1'))\r\n  assertEquals('041 3', f.input('3'))\r\n  assertEquals('041 34', f.input('4'))\r\n  assertEquals('04134 1', f.input('1'))\r\n  assertEquals('04134 12', f.input('2'))\r\n  assertEquals('04134 123', f.input('3'))\r\n  assertEquals('04134 1234', f.input('4'))\r\n\r\n  // 08021 2345\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('08', f.input('8'))\r\n  assertEquals('080', f.input('0'))\r\n  assertEquals('080 2', f.input('2'))\r\n  assertEquals('080 21', f.input('1'))\r\n  assertEquals('08021 2', f.input('2'))\r\n  assertEquals('08021 23', f.input('3'))\r\n  assertEquals('08021 234', f.input('4'))\r\n  assertEquals('08021 2345', f.input('5'))\r\n\r\n  // 00 1 650 253 2250\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('00 1', f.input('1'))\r\n  assertEquals('00 1 6', f.input('6'))\r\n  assertEquals('00 1 65', f.input('5'))\r\n  assertEquals('00 1 650', f.input('0'))\r\n  assertEquals('00 1 650 2', f.input('2'))\r\n  assertEquals('00 1 650 25', f.input('5'))\r\n  assertEquals('00 1 650 253', f.input('3'))\r\n  assertEquals('00 1 650 253 2', f.input('2'))\r\n  assertEquals('00 1 650 253 22', f.input('2'))\r\n  assertEquals('00 1 650 253 222', f.input('2'))\r\n  assertEquals('00 1 650 253 2222', f.input('2'))\r\n}\r\n\r\nfunction testAYTFAR() {\r\n  var f = AsYouType('AR')\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 7', f.input('7'))\r\n  assertEquals('011 70', f.input('0'))\r\n  assertEquals('011 703', f.input('3'))\r\n  assertEquals('011 7031', f.input('1'))\r\n  assertEquals('011 7031-3', f.input('3'))\r\n  assertEquals('011 7031-30', f.input('0'))\r\n  assertEquals('011 7031-300', f.input('0'))\r\n  assertEquals('011 7031-3000', f.input('0'))\r\n}\r\n\r\nfunction testAYTFARMobile() {\r\n  var f = AsYouType('AR')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+54', f.input('4'))\r\n  assertEquals('+54 9', f.input('9'))\r\n  assertEquals('+54 91', f.input('1'))\r\n  assertEquals('+54 9 11', f.input('1'))\r\n  assertEquals('+54 9 11 2', f.input('2'))\r\n  assertEquals('+54 9 11 23', f.input('3'))\r\n  assertEquals('+54 9 11 231', f.input('1'))\r\n  assertEquals('+54 9 11 2312', f.input('2'))\r\n  assertEquals('+54 9 11 2312 1', f.input('1'))\r\n  assertEquals('+54 9 11 2312 12', f.input('2'))\r\n  assertEquals('+54 9 11 2312 123', f.input('3'))\r\n  assertEquals('+54 9 11 2312 1234', f.input('4'))\r\n}\r\n\r\nfunction testAYTFKR() {\r\n  // +82 51 234 5678\r\n  var f = AsYouType('KR')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+82', f.input('2'))\r\n  assertEquals('+82 5', f.input('5'))\r\n  assertEquals('+82 51', f.input('1'))\r\n  assertEquals('+82 51-2', f.input('2'))\r\n  assertEquals('+82 51-23', f.input('3'))\r\n  assertEquals('+82 51-234', f.input('4'))\r\n  assertEquals('+82 51-234-5', f.input('5'))\r\n  assertEquals('+82 51-234-56', f.input('6'))\r\n  assertEquals('+82 51-234-567', f.input('7'))\r\n  assertEquals('+82 51-234-5678', f.input('8'))\r\n\r\n  // +82 2 531 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+82', f.input('2'))\r\n  assertEquals('+82 2', f.input('2'))\r\n  assertEquals('+82 25', f.input('5'))\r\n  assertEquals('+82 2-53', f.input('3'))\r\n  assertEquals('+82 2-531', f.input('1'))\r\n  assertEquals('+82 2-531-5', f.input('5'))\r\n  assertEquals('+82 2-531-56', f.input('6'))\r\n  assertEquals('+82 2-531-567', f.input('7'))\r\n  assertEquals('+82 2-531-5678', f.input('8'))\r\n\r\n  // +82 2 3665 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+82', f.input('2'))\r\n  assertEquals('+82 2', f.input('2'))\r\n  assertEquals('+82 23', f.input('3'))\r\n  assertEquals('+82 2-36', f.input('6'))\r\n  assertEquals('+82 2-366', f.input('6'))\r\n  assertEquals('+82 2-3665', f.input('5'))\r\n  assertEquals('+82 2-3665-5', f.input('5'))\r\n  assertEquals('+82 2-3665-56', f.input('6'))\r\n  assertEquals('+82 2-3665-567', f.input('7'))\r\n  assertEquals('+82 2-3665-5678', f.input('8'))\r\n\r\n  // 02-114\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('02', f.input('2'))\r\n  assertEquals('021', f.input('1'))\r\n  assertEquals('02-11', f.input('1'))\r\n  assertEquals('02-114', f.input('4'))\r\n\r\n  // 02-1300\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('02', f.input('2'))\r\n  assertEquals('021', f.input('1'))\r\n  assertEquals('02-13', f.input('3'))\r\n  assertEquals('02-130', f.input('0'))\r\n  assertEquals('02-1300', f.input('0'))\r\n\r\n  // 011-456-7890\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011-4', f.input('4'))\r\n  assertEquals('011-45', f.input('5'))\r\n  assertEquals('011-456', f.input('6'))\r\n  assertEquals('011-456-7', f.input('7'))\r\n  assertEquals('011-456-78', f.input('8'))\r\n  assertEquals('011-456-789', f.input('9'))\r\n  assertEquals('011-456-7890', f.input('0'))\r\n\r\n  // 011-9876-7890\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011-9', f.input('9'))\r\n  assertEquals('011-98', f.input('8'))\r\n  assertEquals('011-987', f.input('7'))\r\n  assertEquals('011-9876', f.input('6'))\r\n  assertEquals('011-9876-7', f.input('7'))\r\n  assertEquals('011-9876-78', f.input('8'))\r\n  assertEquals('011-9876-789', f.input('9'))\r\n  assertEquals('011-9876-7890', f.input('0'))\r\n}\r\n\r\nfunction testAYTF_MX() {\r\n  var f = AsYouType('MX')\r\n\r\n  // +52 800 123 4567\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 8', f.input('8'))\r\n  assertEquals('+52 80', f.input('0'))\r\n  assertEquals('+52 800', f.input('0'))\r\n  assertEquals('+52 800 1', f.input('1'))\r\n  assertEquals('+52 800 12', f.input('2'))\r\n  assertEquals('+52 800 123', f.input('3'))\r\n  assertEquals('+52 800 123 4', f.input('4'))\r\n  assertEquals('+52 800 123 45', f.input('5'))\r\n  assertEquals('+52 800 123 456', f.input('6'))\r\n  assertEquals('+52 800 123 4567', f.input('7'))\r\n\r\n  // +52 55 1234 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 5', f.input('5'))\r\n  assertEquals('+52 55', f.input('5'))\r\n  assertEquals('+52 55 1', f.input('1'))\r\n  assertEquals('+52 55 12', f.input('2'))\r\n  assertEquals('+52 55 123', f.input('3'))\r\n  assertEquals('+52 55 1234', f.input('4'))\r\n  assertEquals('+52 55 1234 5', f.input('5'))\r\n  assertEquals('+52 55 1234 56', f.input('6'))\r\n  assertEquals('+52 55 1234 567', f.input('7'))\r\n  assertEquals('+52 55 1234 5678', f.input('8'))\r\n\r\n  // +52 212 345 6789\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 2', f.input('2'))\r\n  assertEquals('+52 21', f.input('1'))\r\n  assertEquals('+52 212', f.input('2'))\r\n  assertEquals('+52 212 3', f.input('3'))\r\n  assertEquals('+52 212 34', f.input('4'))\r\n  assertEquals('+52 212 345', f.input('5'))\r\n  assertEquals('+52 212 345 6', f.input('6'))\r\n  assertEquals('+52 212 345 67', f.input('7'))\r\n  assertEquals('+52 212 345 678', f.input('8'))\r\n  assertEquals('+52 212 345 6789', f.input('9'))\r\n\r\n  // +52 1 55 1234 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 1', f.input('1'))\r\n  assertEquals('+52 15', f.input('5'))\r\n  assertEquals('+52 1 55', f.input('5'))\r\n  assertEquals('+52 1 55 1', f.input('1'))\r\n  assertEquals('+52 1 55 12', f.input('2'))\r\n  assertEquals('+52 1 55 123', f.input('3'))\r\n  assertEquals('+52 1 55 1234', f.input('4'))\r\n  assertEquals('+52 1 55 1234 5', f.input('5'))\r\n  assertEquals('+52 1 55 1234 56', f.input('6'))\r\n  assertEquals('+52 1 55 1234 567', f.input('7'))\r\n  assertEquals('+52 1 55 1234 5678', f.input('8'))\r\n\r\n  // +52 1 541 234 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 1', f.input('1'))\r\n  assertEquals('+52 15', f.input('5'))\r\n  assertEquals('+52 1 54', f.input('4'))\r\n  assertEquals('+52 1 541', f.input('1'))\r\n  assertEquals('+52 1 541 2', f.input('2'))\r\n  assertEquals('+52 1 541 23', f.input('3'))\r\n  assertEquals('+52 1 541 234', f.input('4'))\r\n  assertEquals('+52 1 541 234 5', f.input('5'))\r\n  assertEquals('+52 1 541 234 56', f.input('6'))\r\n  assertEquals('+52 1 541 234 567', f.input('7'))\r\n  assertEquals('+52 1 541 234 5678', f.input('8'))\r\n}\r\n\r\nfunction testAYTF_International_Toll_Free() {\r\n  var f = AsYouType('US')\r\n  // +800 1234 5678\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+80', f.input('0'))\r\n  assertEquals('+800', f.input('0'))\r\n  assertEquals('+800 1', f.input('1'))\r\n  assertEquals('+800 12', f.input('2'))\r\n  assertEquals('+800 123', f.input('3'))\r\n  assertEquals('+800 1234', f.input('4'))\r\n  assertEquals('+800 1234 5', f.input('5'))\r\n  assertEquals('+800 1234 56', f.input('6'))\r\n  assertEquals('+800 1234 567', f.input('7'))\r\n  assertEquals('+800 1234 5678', f.input('8'))\r\n  assertEquals('+800123456789', f.input('9'))\r\n}\r\n\r\nfunction testAYTFMultipleLeadingDigitPatterns() {\r\n  // +81 50 2345 6789\r\n  var f = AsYouType('JP')\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+81', f.input('1'))\r\n  assertEquals('+81 5', f.input('5'))\r\n  assertEquals('+81 50', f.input('0'))\r\n  assertEquals('+81 50 2', f.input('2'))\r\n  assertEquals('+81 50 23', f.input('3'))\r\n  assertEquals('+81 50 234', f.input('4'))\r\n  assertEquals('+81 50 2345', f.input('5'))\r\n  assertEquals('+81 50 2345 6', f.input('6'))\r\n  assertEquals('+81 50 2345 67', f.input('7'))\r\n  assertEquals('+81 50 2345 678', f.input('8'))\r\n  assertEquals('+81 50 2345 6789', f.input('9'))\r\n\r\n  // +81 222 12 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+81', f.input('1'))\r\n  assertEquals('+81 2', f.input('2'))\r\n  assertEquals('+81 22', f.input('2'))\r\n  assertEquals('+81 22 2', f.input('2'))\r\n  assertEquals('+81 22 21', f.input('1'))\r\n  assertEquals('+81 2221 2', f.input('2'))\r\n  assertEquals('+81 222 12 5', f.input('5'))\r\n  assertEquals('+81 222 12 56', f.input('6'))\r\n  assertEquals('+81 222 12 567', f.input('7'))\r\n  assertEquals('+81 222 12 5678', f.input('8'))\r\n\r\n  // 011113\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('01', f.input('1'))\r\n  assertEquals('011', f.input('1'))\r\n  assertEquals('011 1', f.input('1'))\r\n  assertEquals('011 11', f.input('1'))\r\n  assertEquals('011113', f.input('3'))\r\n\r\n  // +81 3332 2 5678\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+81', f.input('1'))\r\n  assertEquals('+81 3', f.input('3'))\r\n  assertEquals('+81 33', f.input('3'))\r\n  assertEquals('+81 33 3', f.input('3'))\r\n  assertEquals('+81 3332', f.input('2'))\r\n  assertEquals('+81 3332 2', f.input('2'))\r\n  assertEquals('+81 3332 2 5', f.input('5'))\r\n  assertEquals('+81 3332 2 56', f.input('6'))\r\n  assertEquals('+81 3332 2 567', f.input('7'))\r\n  assertEquals('+81 3332 2 5678', f.input('8'))\r\n}\r\n\r\nfunction testAYTFLongIDD_AU() {\r\n  var f = AsYouType('AU')\r\n  // 0011 1 650 253 2250\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('001', f.input('1'))\r\n  assertEquals('0011', f.input('1'))\r\n  assertEquals('0011 1', f.input('1'))\r\n  assertEquals('0011 1 6', f.input('6'))\r\n  assertEquals('0011 1 65', f.input('5'))\r\n  assertEquals('0011 1 650', f.input('0'))\r\n  assertEquals('0011 1 650 2', f.input('2'))\r\n  assertEquals('0011 1 650 25', f.input('5'))\r\n  assertEquals('0011 1 650 253', f.input('3'))\r\n  assertEquals('0011 1 650 253 2', f.input('2'))\r\n  assertEquals('0011 1 650 253 22', f.input('2'))\r\n  assertEquals('0011 1 650 253 222', f.input('2'))\r\n  assertEquals('0011 1 650 253 2222', f.input('2'))\r\n\r\n  // 0011 81 3332 2 5678\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('001', f.input('1'))\r\n  assertEquals('0011', f.input('1'))\r\n  assertEquals('00118', f.input('8'))\r\n  assertEquals('0011 81', f.input('1'))\r\n  assertEquals('0011 81 3', f.input('3'))\r\n  assertEquals('0011 81 33', f.input('3'))\r\n  assertEquals('0011 81 33 3', f.input('3'))\r\n  assertEquals('0011 81 3332', f.input('2'))\r\n  assertEquals('0011 81 3332 2', f.input('2'))\r\n  assertEquals('0011 81 3332 2 5', f.input('5'))\r\n  assertEquals('0011 81 3332 2 56', f.input('6'))\r\n  assertEquals('0011 81 3332 2 567', f.input('7'))\r\n  assertEquals('0011 81 3332 2 5678', f.input('8'))\r\n\r\n  // 0011 244 250 253 222\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('001', f.input('1'))\r\n  assertEquals('0011', f.input('1'))\r\n  assertEquals('00112', f.input('2'))\r\n  assertEquals('001124', f.input('4'))\r\n  assertEquals('0011 244', f.input('4'))\r\n  assertEquals('0011 244 2', f.input('2'))\r\n  assertEquals('0011 244 25', f.input('5'))\r\n  assertEquals('0011 244 250', f.input('0'))\r\n  assertEquals('0011 244 250 2', f.input('2'))\r\n  assertEquals('0011 244 250 25', f.input('5'))\r\n  assertEquals('0011 244 250 253', f.input('3'))\r\n  assertEquals('0011 244 250 253 2', f.input('2'))\r\n  assertEquals('0011 244 250 253 22', f.input('2'))\r\n  assertEquals('0011 244 250 253 222', f.input('2'))\r\n}\r\n\r\nfunction testAYTFLongIDD_KR() {\r\n  var f = AsYouType('KR')\r\n  // 00300 1 650 253 2222\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('003', f.input('3'))\r\n  assertEquals('0030', f.input('0'))\r\n  assertEquals('00300', f.input('0'))\r\n  assertEquals('00300 1', f.input('1'))\r\n  assertEquals('00300 1 6', f.input('6'))\r\n  assertEquals('00300 1 65', f.input('5'))\r\n  assertEquals('00300 1 650', f.input('0'))\r\n  assertEquals('00300 1 650 2', f.input('2'))\r\n  assertEquals('00300 1 650 25', f.input('5'))\r\n  assertEquals('00300 1 650 253', f.input('3'))\r\n  assertEquals('00300 1 650 253 2', f.input('2'))\r\n  assertEquals('00300 1 650 253 22', f.input('2'))\r\n  assertEquals('00300 1 650 253 222', f.input('2'))\r\n  assertEquals('00300 1 650 253 2222', f.input('2'))\r\n}\r\n\r\nfunction testAYTFLongNDD_KR() {\r\n  var f = AsYouType('KR')\r\n  // 08811-9876-7890\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('08', f.input('8'))\r\n  assertEquals('088', f.input('8'))\r\n  assertEquals('0881', f.input('1'))\r\n  assertEquals('08811', f.input('1'))\r\n  assertEquals('08811-9', f.input('9'))\r\n  assertEquals('08811-98', f.input('8'))\r\n  assertEquals('08811-987', f.input('7'))\r\n  assertEquals('08811-9876', f.input('6'))\r\n  assertEquals('08811-9876-7', f.input('7'))\r\n  assertEquals('08811-9876-78', f.input('8'))\r\n  assertEquals('08811-9876-789', f.input('9'))\r\n  assertEquals('08811-9876-7890', f.input('0'))\r\n\r\n  // 08500 11-9876-7890\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('08', f.input('8'))\r\n  assertEquals('085', f.input('5'))\r\n  assertEquals('0850', f.input('0'))\r\n  assertEquals('08500', f.input('0'))\r\n  assertEquals('08500 1', f.input('1'))\r\n  assertEquals('08500 11', f.input('1'))\r\n  assertEquals('08500 11-9', f.input('9'))\r\n  assertEquals('08500 11-98', f.input('8'))\r\n  assertEquals('08500 11-987', f.input('7'))\r\n  assertEquals('08500 11-9876', f.input('6'))\r\n  assertEquals('08500 11-9876-7', f.input('7'))\r\n  assertEquals('08500 11-9876-78', f.input('8'))\r\n  assertEquals('08500 11-9876-789', f.input('9'))\r\n  assertEquals('08500 11-9876-7890', f.input('0'))\r\n}\r\n\r\nfunction testAYTFLongNDD_SG() {\r\n  var f = AsYouType('SG')\r\n  // 777777 9876 7890\r\n  assertEquals('7', f.input('7'))\r\n  assertEquals('77', f.input('7'))\r\n  assertEquals('777', f.input('7'))\r\n  assertEquals('7777', f.input('7'))\r\n  assertEquals('77777', f.input('7'))\r\n  assertEquals('777777', f.input('7'))\r\n  assertEquals('777777 9', f.input('9'))\r\n  assertEquals('777777 98', f.input('8'))\r\n  assertEquals('777777 987', f.input('7'))\r\n  assertEquals('777777 9876', f.input('6'))\r\n  assertEquals('777777 9876 7', f.input('7'))\r\n  assertEquals('777777 9876 78', f.input('8'))\r\n  assertEquals('777777 9876 789', f.input('9'))\r\n  assertEquals('777777 9876 7890', f.input('0'))\r\n}\r\n\r\nfunction testAYTFShortNumberFormattingFix_AU() {\r\n  // For Australia, the national prefix is not optional when formatting.\r\n  var f = AsYouType('AU')\r\n\r\n  // 1234567890 - For leading digit 1, the national prefix formatting rule has\r\n  // first group only.\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('12', f.input('2'))\r\n  assertEquals('123', f.input('3'))\r\n  assertEquals('1234', f.input('4'))\r\n  assertEquals('1234 5', f.input('5'))\r\n  assertEquals('1234 56', f.input('6'))\r\n  assertEquals('1234 567', f.input('7'))\r\n  assertEquals('1234 567 8', f.input('8'))\r\n  assertEquals('1234 567 89', f.input('9'))\r\n  assertEquals('1234 567 890', f.input('0'))\r\n\r\n  // +61 1234 567 890 - Test the same number, but with the country code.\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+6', f.input('6'))\r\n  assertEquals('+61', f.input('1'))\r\n  assertEquals('+61 1', f.input('1'))\r\n  assertEquals('+61 12', f.input('2'))\r\n  assertEquals('+61 123', f.input('3'))\r\n  assertEquals('+61 1234', f.input('4'))\r\n  assertEquals('+61 1234 5', f.input('5'))\r\n  assertEquals('+61 1234 56', f.input('6'))\r\n  assertEquals('+61 1234 567', f.input('7'))\r\n  assertEquals('+61 1234 567 8', f.input('8'))\r\n  assertEquals('+61 1234 567 89', f.input('9'))\r\n  assertEquals('+61 1234 567 890', f.input('0'))\r\n\r\n  // 212345678 - For leading digit 2, the national prefix formatting rule puts\r\n  // the national prefix before the first group.\r\n  f.reset()\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('02', f.input('2'))\r\n  assertEquals('021', f.input('1'))\r\n  assertEquals('02 12', f.input('2'))\r\n  assertEquals('02 123', f.input('3'))\r\n  assertEquals('02 1234', f.input('4'))\r\n  assertEquals('02 1234 5', f.input('5'))\r\n  assertEquals('02 1234 56', f.input('6'))\r\n  assertEquals('02 1234 567', f.input('7'))\r\n  assertEquals('02 1234 5678', f.input('8'))\r\n\r\n  // 212345678 - Test the same number, but without the leading 0.\r\n  f.reset()\r\n  assertEquals('2', f.input('2'))\r\n  assertEquals('21', f.input('1'))\r\n  assertEquals('212', f.input('2'))\r\n  assertEquals('2123', f.input('3'))\r\n  assertEquals('21234', f.input('4'))\r\n  assertEquals('212345', f.input('5'))\r\n  assertEquals('2123456', f.input('6'))\r\n  assertEquals('21234567', f.input('7'))\r\n  assertEquals('212345678', f.input('8'))\r\n\r\n  // +61 2 1234 5678 - Test the same number, but with the country code.\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+6', f.input('6'))\r\n  assertEquals('+61', f.input('1'))\r\n  assertEquals('+61 2', f.input('2'))\r\n  assertEquals('+61 21', f.input('1'))\r\n  assertEquals('+61 2 12', f.input('2'))\r\n  assertEquals('+61 2 123', f.input('3'))\r\n  assertEquals('+61 2 1234', f.input('4'))\r\n  assertEquals('+61 2 1234 5', f.input('5'))\r\n  assertEquals('+61 2 1234 56', f.input('6'))\r\n  assertEquals('+61 2 1234 567', f.input('7'))\r\n  assertEquals('+61 2 1234 5678', f.input('8'))\r\n}\r\n\r\nfunction testAYTFShortNumberFormattingFix_KR() {\r\n  // For Korea, the national prefix is not optional when formatting, and the\r\n  // national prefix formatting rule doesn't consist of only the first group.\r\n  var f = AsYouType('KR')\r\n\r\n  // 111\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('11', f.input('1'))\r\n  assertEquals('111', f.input('1'))\r\n\r\n  // 114\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('11', f.input('1'))\r\n  assertEquals('114', f.input('4'))\r\n\r\n  // 13121234 - Test a mobile number without the national prefix. Even though it\r\n  // is not an emergency number, it should be formatted as a block.\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('13', f.input('3'))\r\n  assertEquals('131', f.input('1'))\r\n  assertEquals('1312', f.input('2'))\r\n  assertEquals('13121', f.input('1'))\r\n  assertEquals('131212', f.input('2'))\r\n  assertEquals('1312123', f.input('3'))\r\n  assertEquals('13121234', f.input('4'))\r\n\r\n  // +82 131-2-1234 - Test the same number, but with the country code.\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+82', f.input('2'))\r\n  assertEquals('+82 1', f.input('1'))\r\n  assertEquals('+82 13', f.input('3'))\r\n  assertEquals('+82 131', f.input('1'))\r\n  assertEquals('+82 131-2', f.input('2'))\r\n  assertEquals('+82 131-2-1', f.input('1'))\r\n  assertEquals('+82 131-2-12', f.input('2'))\r\n  assertEquals('+82 131-2-123', f.input('3'))\r\n  assertEquals('+82 131-2-1234', f.input('4'))\r\n}\r\n\r\nfunction testAYTFShortNumberFormattingFix_MX() {\r\n  // For Mexico, the national prefix is optional when formatting.\r\n  var f = AsYouType('MX')\r\n\r\n  // 911\r\n  assertEquals('9', f.input('9'))\r\n  assertEquals('91', f.input('1'))\r\n  assertEquals('911', f.input('1'))\r\n\r\n  // 800 123 4567 - Test a toll-free number, which should have a formatting rule\r\n  // applied to it even though it doesn't begin with the national prefix.\r\n  f.reset()\r\n  assertEquals('8', f.input('8'))\r\n  assertEquals('80', f.input('0'))\r\n  assertEquals('800', f.input('0'))\r\n  assertEquals('800 1', f.input('1'))\r\n  assertEquals('800 12', f.input('2'))\r\n  assertEquals('800 123', f.input('3'))\r\n  assertEquals('800 123 4', f.input('4'))\r\n  assertEquals('800 123 45', f.input('5'))\r\n  assertEquals('800 123 456', f.input('6'))\r\n  assertEquals('800 123 4567', f.input('7'))\r\n\r\n  // +52 800 123 4567 - Test the same number, but with the country code.\r\n  f.reset()\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+5', f.input('5'))\r\n  assertEquals('+52', f.input('2'))\r\n  assertEquals('+52 8', f.input('8'))\r\n  assertEquals('+52 80', f.input('0'))\r\n  assertEquals('+52 800', f.input('0'))\r\n  assertEquals('+52 800 1', f.input('1'))\r\n  assertEquals('+52 800 12', f.input('2'))\r\n  assertEquals('+52 800 123', f.input('3'))\r\n  assertEquals('+52 800 123 4', f.input('4'))\r\n  assertEquals('+52 800 123 45', f.input('5'))\r\n  assertEquals('+52 800 123 456', f.input('6'))\r\n  assertEquals('+52 800 123 4567', f.input('7'))\r\n}\r\n\r\nfunction testAYTFNoNationalPrefix() {\r\n  var f = AsYouType('IT')\r\n  assertEquals('3', f.input('3'))\r\n  assertEquals('33', f.input('3'))\r\n  assertEquals('333', f.input('3'))\r\n  assertEquals('333 3', f.input('3'))\r\n  assertEquals('333 33', f.input('3'))\r\n  assertEquals('333 333', f.input('3'))\r\n}\r\n\r\nfunction testAYTFNoNationalPrefixFormattingRule() {\r\n  var f = AsYouType('AO')\r\n  assertEquals('3', f.input('3'))\r\n  assertEquals('33', f.input('3'))\r\n  assertEquals('333', f.input('3'))\r\n  assertEquals('333 3', f.input('3'))\r\n  assertEquals('333 33', f.input('3'))\r\n  assertEquals('333 333', f.input('3'))\r\n}\r\n\r\nfunction testAYTFShortNumberFormattingFix_US() {\r\n  // For the US, an initial 1 is treated specially.\r\n  var f = AsYouType('US')\r\n\r\n  // 101 - Test that the initial 1 is not treated as a national prefix.\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('10', f.input('0'))\r\n  assertEquals('101', f.input('1'))\r\n\r\n  // 112 - Test that the initial 1 is not treated as a national prefix.\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('11', f.input('1'))\r\n  assertEquals('112', f.input('2'))\r\n\r\n  // 122 - Test that the initial 1 is treated as a national prefix.\r\n  f.reset()\r\n  assertEquals('1', f.input('1'))\r\n  assertEquals('12', f.input('2'))\r\n  assertEquals('1 22', f.input('2'))\r\n}\r\n\r\nfunction testAYTFClearNDDAfterIddExtraction() {\r\n  var f = AsYouType('KR')\r\n\r\n  assertEquals('0', f.input('0'))\r\n  assertEquals('00', f.input('0'))\r\n  assertEquals('007', f.input('7'))\r\n  assertEquals('0070', f.input('0'))\r\n  assertEquals('00700', f.input('0'))\r\n  // NDD is '0' at this stage (the first '0' in '00700') because it's not\r\n  // clear if the number is a national number or using the IDD to dial out.\r\n  assertEquals('00700 1', f.input('1'))\r\n  // NDD should be cleared here because IDD '00700' was extracted after the\r\n  // country calling code '1' (US) was entered.\r\n  assertEquals('00700 1 2', f.input('2'))\r\n  // The remaining long sequence of inputs is because the original bug that\r\n  // this test if for only triggered after a lot of subsequent inputs.\r\n  assertEquals('00700 1 23', f.input('3'))\r\n  assertEquals('00700 1 234', f.input('4'))\r\n  assertEquals('00700 1 234 5', f.input('5'))\r\n  assertEquals('00700 1 234 56', f.input('6'))\r\n  assertEquals('00700 1 234 567', f.input('7'))\r\n  assertEquals('00700 1 234 567 8', f.input('8'))\r\n  assertEquals('00700 1 234 567 89', f.input('9'))\r\n  assertEquals('00700 1 234 567 890', f.input('0'))\r\n  assertEquals('00700 1 234 567 8901', f.input('1'))\r\n  assertEquals('00700123456789012', f.input('2'))\r\n  assertEquals('007001234567890123', f.input('3'))\r\n  assertEquals('0070012345678901234', f.input('4'))\r\n  assertEquals('00700123456789012345', f.input('5'))\r\n  assertEquals('007001234567890123456', f.input('6'))\r\n  assertEquals('0070012345678901234567', f.input('7'))\r\n}\r\n\r\nfunction testAYTFNumberPatternsBecomingInvalidShouldNotResultInDigitLoss() {\r\n  var f = AsYouType('CN')\r\n\r\n  assertEquals('+', f.input('+'))\r\n  assertEquals('+8', f.input('8'))\r\n  assertEquals('+86', f.input('6'))\r\n  assertEquals('+86 9', f.input('9'))\r\n  assertEquals('+86 98', f.input('8'))\r\n  assertEquals('+86 988', f.input('8'))\r\n  assertEquals('+86 988 1', f.input('1'))\r\n  // Now the number pattern is no longer valid because there are multiple\r\n  // leading digit patterns; when we try again to extract a country code we\r\n  // should ensure we use the last leading digit pattern, rather than the first\r\n  // one such that it *thinks* it's found a valid formatting rule again.\r\n  // https://github.com/google/libphonenumber/issues/437\r\n  assertEquals('+8698812', f.input('2'))\r\n  assertEquals('+86988123', f.input('3'))\r\n  assertEquals('+869881234', f.input('4'))\r\n  assertEquals('+8698812345', f.input('5'))\r\n}"],"file":"AsYouType.original.test2.js"}